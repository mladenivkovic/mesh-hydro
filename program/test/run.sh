#!/bin/bash

#-------------------------------------------
# Automatically compile and run the hydro
# program with all solvers and various IC
# files.
# Then plot the solutions, and create a TeX
# file where the images are compared.
#-------------------------------------------



#===================================
genparamfile() {
#===================================
    # generate parameter file.
    # $1 = nsteps
    # $2 = tmax
    # $3 = output frequency: after how many steps to write
    # $4 = dt_out
    # $5 = basename. if == "NO_BASENAME" it will be skipped
    # $6 = Ccfl

    f=paramfile.txt
    echo "// parameter file for hydro program" > $f
    echo "// generated by run.sh" >> $f
    echo ""                 >> $f
    echo "verbose = 1"      >> $f
    echo "nx = 200"         >> $f
    echo "nstep_log = 100"  >> $f
    echo "nsteps = $1"      >> $f
    echo "tmax = $2"        >> $f
    echo "foutput = $3"     >> $f
    echo "dt_out = $4"      >> $f
    if [ "$5" != "NO_BASENAME" ]; then
        echo "basename = $5"    >> $f
    fi
    echo "ccfl = $6"        >> $f
}


#===================================
genparamfile_transmissive() {
#===================================
    # generate parameter file.
    # $1 = nsteps
    # $2 = tmax
    # $3 = output frequency: after how many steps to write
    # $4 = dt_out
    # $5 = basename. if == "NO_BASENAME" it will be skipped
    # $6 = Ccfl

    f=paramfile.txt
    echo "// parameter file for hydro program" > $f
    echo "// generated by run.sh" >> $f
    echo ""                 >> $f
    echo "verbose = 1"      >> $f
    echo "nx = 200"         >> $f
    echo "nstep_log = 100"  >> $f
    echo "nsteps = $1"      >> $f
    echo "tmax = $2"        >> $f
    echo "foutput = $3"     >> $f
    echo "dt_out = $4"      >> $f
    if [ "$5" != "NO_BASENAME" ]; then
        echo "basename = $5"    >> $f
    fi
    echo "ccfl = $6"        >> $f
    echo "boundary = 2"     >> $f
}






#==========================
genmakefile(){
#==========================
    # generate makefile "header" which 
    # will be included into the actual 
    # Makefile.
    # $1: ndim
    # $2: solver
    # $3: riemann solver
    # $3: limiter

    f=defines.mk
    echo "# generated with run.sh" > $f
    echo ""             >> $f
    echo "NDIM = $1"    >> $f
    echo "SOLVER = $2"  >> $f
    echo "RIEMANN = $3" >> $f
    echo "LIMITER = $4" >> $f

}


function myecho(){
    echo "================ $1"
}


function errexit() {
    # usage: errexit $? "optional message string"
    if [[ "$1" -ne 0 ]]; then
        myecho "ERROR OCCURED. ERROR CODE $1"
        if [[ $# > 1 ]]; then
            myecho "$2"
        fi
        exit $1
    else
        return 0
    fi
}



generate_tex(){
    cd TeX
    ./run.sh
    cd .
}


plotdir=../../py/plotting


# cleanup first
rm -f *.out *.log
# rm *.png




#==========================
# FUNCTIONS FOR TESTS
#==========================

# so they'll be easier to call for specific purposes/tests in groups


advection_pwconst_1D(){
    #-------------------
    # 1D PWCONST
    #-------------------

    # genmakefile ndim solver riemann limiter
    genmakefile 1 ADVECTION_PWCONST NONE NONE
    make clean && make
    errexit $?

    # positive velocity
    # genparamfile nsteps tmax foutput dt_out basename ccfl
    genparamfile 0 10 0 1.0 advection-1D-pwconst 0.8

    ./hydro paramfile.txt ./IC/advection-1D.dat
    errexit $?
    $plotdir/plot_all_density.py advection-1D-pwconst-0000.out

    # negative velocity
    genparamfile 0 10 0 1.0 advection-1D-pwconst-negvel 0.8
    ./hydro paramfile.txt ./IC/advection-1D-negvel.dat
    errexit $?
    $plotdir/plot_all_density.py advection-1D-pwconst-negvel-0000.out
}




advection_pwconst_2D(){
    #-------------------
    # 2D PWCONST
    #-------------------

    # genmakefile ndim solver riemann limiter
    genmakefile 2 ADVECTION_PWCONST NONE NONE
    make clean && make
    errexit $?

    # positive velocity
    # genparamfile nsteps tmax foutput dt_out basename ccfl
    genparamfile 0 1 0 0 advection-2D-pwconst 0.8
    ./hydro paramfile.txt ./IC/advection-2D.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwconst-0001.out

    # negative velocity
    genparamfile 0 1 0 0 advection-2D-pwconst-negvel 0.8
    ./hydro paramfile.txt ./IC/advection-2D-negvel.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwconst-negvel-0001.out

    # x only
    genparamfile 0 1 0 0 advection-2D-pwconst-x 0.8
    ./hydro paramfile.txt ./IC/advection-2D-x.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwconst-x-0001.out

    # y only
    genparamfile 0 1 0 0 advection-2D-pwconst-y 0.8
    ./hydro paramfile.txt ./IC/advection-2D-y.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwconst-y-0001.out
}




advection_pwlin_1D(){

    #-------------------
    # 1D PWLIN
    #-------------------

    # genmakefile ndim solver riemann limiter
    genmakefile 1 ADVECTION_PWLIN NONE NONE
    make clean && make
    errexit $?

    # positive velocity
    # genparamfile nsteps tmax foutput dt_out basename ccfl
    genparamfile 0 10 0 1.0 advection-1D-pwlin 0.8

    ./hydro paramfile.txt ./IC/advection-1D.dat
    errexit $?
    $plotdir/plot_all_density.py advection-1D-pwlin-0000.out

    # negative velocity
    genparamfile 0 10 0 1.0 advection-1D-pwlin-negvel 0.8
    ./hydro paramfile.txt ./IC/advection-1D-negvel.dat
    errexit $?
    $plotdir/plot_all_density.py advection-1D-pwlin-negvel-0000.out

}



advection_pwlin_2D(){
    #-------------------
    # 2D pwlin
    #-------------------

    # genmakefile ndim solver riemann limiter
    genmakefile 2 ADVECTION_PWLIN NONE NONE
    make clean && make
    errexit $?

    # positive velocity
    # genparamfile nsteps tmax foutput dt_out basename
    genparamfile 0 1 0 0 advection-2D-pwlin 0.8

    ./hydro paramfile.txt ./IC/advection-2D.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwlin-0001.out

    # negative velocity
    genparamfile 0 1 0 0 advection-2D-pwlin-negvel 0.8
    ./hydro paramfile.txt ./IC/advection-2D-negvel.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwlin-negvel-0001.out

    # x only
    genparamfile 0 1 0 0 advection-2D-pwlin-x 0.8
    ./hydro paramfile.txt ./IC/advection-2D-x.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwlin-x-0001.out

    # y only
    genparamfile 0 1 0 0 advection-2D-pwlin-y 0.8
    ./hydro paramfile.txt ./IC/advection-2D-y.dat
    errexit $?
    $plotdir/plot_density.py advection-2D-pwlin-y-0001.out
}




advection_pwlin_limiters_1D(){
    #----------------------------
    # 1D pwlin with limiters
    #----------------------------

    for LIMITER in MINMOD SUPERBEE MC VANLEER; do

        # genmakefile ndim solver riemann limiter
        genmakefile 1 ADVECTION_PWLIN NONE $LIMITER
        make clean && make
        errexit $?

        # positive velocity
        # genparamfile nsteps tmax foutput dt_out basename ccfl
        genparamfile 0 10 0 1.0 advection-1D-$LIMITER 0.8

        ./hydro paramfile.txt ./IC/advection-1D.dat
        errexit $?
        $plotdir/plot_all_density.py advection-1D-$LIMITER-0000.out
    done
}




advection_pwlin_limiters_2D(){
    #----------------------------
    # 2D pwlin with limiters
    #----------------------------

    for LIMITER in MINMOD SUPERBEE MC VANLEER; do

        # genmakefile ndim solver riemann limiter
        genmakefile 2 ADVECTION_PWLIN NONE $LIMITER
        make clean && make
        errexit $?

        # positive velocity
        # genparamfile nsteps tmax foutput dt_out basename ccfl
        genparamfile 0 1 0 0 advection-2D-$LIMITER 0.8

        ./hydro paramfile.txt ./IC/advection-2D.dat
        errexit $?
        $plotdir/plot_density.py advection-2D-$LIMITER-0001.out

    done

}




riemann_vacuum(){
    #----------------------------
    # Test the vacuum solver
    #----------------------------

    for RIEMANN in EXACT; do

        # genmakefile ndim solver riemann limiter
        genmakefile 1 NONE $RIEMANN NONE
        make -f Makefile-Riemann clean && make -f Makefile-Riemann
        errexit $?

        # genparamfile nsteps tmax foutput dt_out basename ccfl
        genparamfile 0 0.01 0 0 "NO_BASENAME" 1
        ./riemann paramfile.txt ./IC/riemann-left-vacuum.dat
        errexit $?
        $plotdir/plot_riemann_result.py riemann-left-vacuum-*0001.out ./IC/riemann-left-vacuum.dat
        
        genparamfile 0 0.01 0 0 "NO_BASENAME" 1
        ./riemann paramfile.txt ./IC/riemann-right-vacuum.dat
        errexit $?
        $plotdir/plot_riemann_result.py riemann-right-vacuum-*0001.out ./IC/riemann-right-vacuum.dat

        genparamfile 0 0.01 0 0 "NO_BASENAME" 1
        ./riemann paramfile.txt ./IC/riemann-vacuum-generating.dat
        errexit $?
        $plotdir/plot_riemann_result.py riemann-vacuum-generating*0001.out ./IC/riemann-vacuum-generating.dat

    done

}






riemann_solver(){
    #-----------------------------
    # Test various Riemann solvers
    #-----------------------------

    for RIEMANN in EXACT; do

        # genmakefile ndim solver riemann limiter
        genmakefile 1 NONE $RIEMANN NONE
        make -f Makefile-Riemann clean && make -f Makefile-Riemann
        errexit $?

        for icprefix in riemann-sod-shock riemann-sod-shock-reverse; do
            # genparamfile nsteps tmax foutput dt_out basename ccfl
            genparamfile 0 0.25 0 0 "NO_BASENAME" 1
            ./riemann paramfile.txt ./IC/"$icprefix".dat
            errexit $?

            $plotdir/plot_riemann_result.py "$icprefix"-RIEMANN-EXACT-0001.out ./IC/"$icprefix".dat
        done

    done
}




function godunov_1D() {
    #-------------------------------------------
    # 1D godunov stuff
    #-------------------------------------------


    # for RIEMANN in EXACT TSRS; do
    for RIEMANN in EXACT TRRS TSRS HLLC; do

        # genmakefile ndim solver riemann limiter
        genmakefile 1 GODUNOV $RIEMANN NONE
        make clean && make
        errexit $?

        # for icprefix in riemann-sod-shock riemann-sod-shock-reverse; do
        for icprefix in riemann-left-vacuum riemann-right-vacuum riemann-vacuum-generating riemann-sod-shock riemann-sod-shock-reverse; do
            # genparamfile_transmissive nsteps tmax foutput dt_out basename ccfl
            genparamfile_transmissive 0 0.2 0 0 "NO_BASENAME" 0.9

            ./hydro paramfile.txt ./IC/"$icprefix".dat
            errexit $?
        done

        for icprefix in riemann-left-vacuum riemann-right-vacuum riemann-vacuum-generating; do
            genparamfile_transmissive 0 0.01 0 0 "NO_BASENAME" 0.9

            ./hydro paramfile.txt ./IC/"$icprefix".dat
            errexit $?
        done
    done

    for icprefix in riemann-left-vacuum riemann-right-vacuum riemann-vacuum-generating riemann-sod-shock riemann-sod-shock-reverse; do
        ./overplot_riemann_solvers.py "$icprefix" GODUNOV
    done



}





#=====================================
# Now actually run the tests
#=====================================


advection_pwconst_1D
advection_pwconst_2D
advection_pwlin_1D
advection_pwlin_2D
advection_pwlin_limiters_1D
advection_pwlin_limiters_2D

riemann_vacuum
riemann_solver
godunov_1D





#=====================================
# create TeX
#=====================================
generate_tex
